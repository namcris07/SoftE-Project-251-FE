import React, { useState } from "react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "../components/ui/card";
import { Button } from "../components/ui/button";
import { Input } from "../components/ui/input";
import { Label } from "../components/ui/label";
import { Badge } from "../components/ui/badge";
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "../components/ui/tabs";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "../components/ui/select";
import { Textarea } from "../components/ui/textarea";
import { Footer } from "../components/layout/Footer";
import {
  Award,
  Plus,
  Edit,
  Trash2,
  Search,
  DollarSign,
  Users,
  Clock,
  AlertCircle,
  CheckCircle,
} from "lucide-react";

export function ScholarshipManagement({ user, onNavigate }) {
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedStatus, setSelectedStatus] = useState("all");
  const [selectedType, setSelectedType] = useState("all");

  // ===== Mock Data =====
  const scholarships = [
    {
      id: "1",
      name: "H·ªçc b·ªïng Khuy·∫øn h·ªçc",
      type: "academic",
      amount: 2000000,
      description: "H·ªçc b·ªïng d√†nh cho sinh vi√™n c√≥ th√†nh t√≠ch h·ªçc t·∫≠p xu·∫•t s·∫Øc",
      criteria: ["GPA >= 3.5", "Kh√¥ng c√≥ m√¥n h·ªçc n√†o d∆∞·ªõi ƒëi·ªÉm C"],
      duration: "1 h·ªçc k·ª≥",
      maxRecipients: 50,
      currentRecipients: 23,
      status: "active",
      applicationDeadline: "2025-02-15",
    },
    {
      id: "2",
      name: "H·ªçc b·ªïng H·ªó tr·ª£ t√†i ch√≠nh",
      type: "financial",
      amount: 1500000,
      description: "H·ªó tr·ª£ sinh vi√™n c√≥ ho√†n c·∫£nh kh√≥ khƒÉn",
      criteria: ["C√≥ gi·∫•y x√°c nh·∫≠n h·ªô ngh√®o/c·∫≠n ngh√®o", "GPA >= 2.5"],
      duration: "1 h·ªçc k·ª≥",
      maxRecipients: 100,
      currentRecipients: 87,
      status: "active",
      applicationDeadline: "2025-02-20",
    },
    {
      id: "3",
      name: "H·ªçc b·ªïng Nghi√™n c·ª©u khoa h·ªçc",
      type: "research",
      amount: 3000000,
      description: "Khuy·∫øn kh√≠ch sinh vi√™n tham gia nghi√™n c·ª©u khoa h·ªçc",
      criteria: [
        "C√≥ ƒë·ªÅ t√†i nghi√™n c·ª©u",
        "GPA >= 3.0",
        "C√≥ gi·∫£ng vi√™n h∆∞·ªõng d·∫´n",
      ],
      duration: "1 nƒÉm",
      maxRecipients: 20,
      currentRecipients: 12,
      status: "active",
      applicationDeadline: "2025-03-01",
    },
    {
      id: "4",
      name: "H·ªçc b·ªïng Th·ªÉ thao",
      type: "sports",
      amount: 1000000,
      description: "D√†nh cho sinh vi√™n c√≥ th√†nh t√≠ch th·ªÉ thao xu·∫•t s·∫Øc",
      criteria: ["C√≥ th√†nh t√≠ch th·ªÉ thao c·∫•p tr∆∞·ªùng tr·ªü l√™n", "GPA >= 2.0"],
      duration: "1 h·ªçc k·ª≥",
      maxRecipients: 30,
      currentRecipients: 15,
      status: "inactive",
      applicationDeadline: "2025-01-31",
    },
  ];

  const applications = [
    {
      id: "1",
      studentName: "Nguy·ªÖn VƒÉn An",
      studentEmail: "student1@hcmut.edu.vn",
      scholarshipName: "H·ªçc b·ªïng Khuy·∫øn h·ªçc",
      appliedDate: "2025-01-05",
      status: "pending",
      gpa: 3.7,
      documents: ["B·∫£ng ƒëi·ªÉm", "Gi·∫•y x√°c nh·∫≠n sinh vi√™n"],
      notes: "Sinh vi√™n c√≥ th√†nh t√≠ch h·ªçc t·∫≠p t·ªët",
    },
    {
      id: "2",
      studentName: "Tr·∫ßn Th·ªã B√¨nh",
      studentEmail: "student2@hcmut.edu.vn",
      scholarshipName: "H·ªçc b·ªïng H·ªó tr·ª£ t√†i ch√≠nh",
      appliedDate: "2025-01-03",
      status: "approved",
      gpa: 2.8,
      documents: ["B·∫£ng ƒëi·ªÉm", "Gi·∫•y x√°c nh·∫≠n h·ªô ngh√®o"],
      notes: "Ho√†n c·∫£nh kh√≥ khƒÉn, c·∫ßn h·ªó tr·ª£",
      approvedAmount: 1500000,
    },
    {
      id: "3",
      studentName: "L√™ VƒÉn C∆∞·ªùng",
      studentEmail: "student3@hcmut.edu.vn",
      scholarshipName: "H·ªçc b·ªïng Khuy·∫øn h·ªçc",
      appliedDate: "2025-01-02",
      status: "rejected",
      gpa: 3.2,
      documents: ["B·∫£ng ƒëi·ªÉm"],
      notes: "Kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán GPA",
    },
  ];

  const recipients = [
    {
      id: "1",
      studentName: "Tr·∫ßn Th·ªã B√¨nh",
      scholarshipName: "H·ªçc b·ªïng H·ªó tr·ª£ t√†i ch√≠nh",
      amount: 1500000,
      awardedDate: "2025-01-06",
      semester: "HK2 2024-2025",
      status: "active",
      remainingAmount: 1500000,
      usedAmount: 0,
    },
    {
      id: "2",
      studentName: "Ph·∫°m VƒÉn ƒê·ª©c",
      scholarshipName: "H·ªçc b·ªïng Khuy·∫øn h·ªçc",
      amount: 2000000,
      awardedDate: "2024-12-15",
      semester: "HK1 2024-2025",
      status: "active",
      remainingAmount: 800000,
      usedAmount: 1200000,
    },
  ];

  // ===== Helper functions =====
  const getTypeLabel = (t) =>
    t === "academic"
      ? "H·ªçc t·∫≠p"
      : t === "financial"
      ? "T√†i ch√≠nh"
      : t === "research"
      ? "Nghi√™n c·ª©u"
      : t === "sports"
      ? "Th·ªÉ thao"
      : t;

  const getTypeColor = (t) =>
    t === "academic"
      ? "bg-[#A7C6ED] text-[#0388B4]"
      : t === "financial"
      ? "bg-green-100 text-green-800"
      : t === "research"
      ? "bg-purple-100 text-purple-800"
      : t === "sports"
      ? "bg-orange-100 text-orange-800"
      : "bg-gray-100 text-gray-800";

  const getStatusColor = (s) =>
    s === "active"
      ? "bg-green-100 text-green-800"
      : s === "inactive"
      ? "bg-gray-100 text-gray-800"
      : s === "pending"
      ? "bg-yellow-100 text-yellow-800"
      : s === "approved"
      ? "bg-green-100 text-green-800"
      : s === "rejected"
      ? "bg-red-100 text-red-800"
      : "bg-gray-100 text-gray-800";

  const getStatusLabel = (s) =>
    s === "active"
      ? "ƒêang m·ªü"
      : s === "inactive"
      ? "ƒê√£ ƒë√≥ng"
      : s === "pending"
      ? "Ch·ªù duy·ªát"
      : s === "approved"
      ? "ƒê√£ duy·ªát"
      : s === "rejected"
      ? "T·ª´ ch·ªëi"
      : s;

  const filteredScholarships = scholarships.filter((s) => {
    const matchSearch =
      s.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      s.description.toLowerCase().includes(searchTerm.toLowerCase());
    const matchStatus = selectedStatus === "all" || s.status === selectedStatus;
    const matchType = selectedType === "all" || s.type === selectedType;
    return matchSearch && matchStatus && matchType;
  });

const totalApplications = applications.length;
const approvedApplications = applications.filter(
  (a) => a.status === "approved"
).length;
const pendingApplications = applications.filter(
  (a) => a.status === "pending"
).length;
const totalScholarshipAmount = scholarships.reduce(
  (sum, s) => sum + s.amount,
  0
);
  // ===== UI =====
  return (
    <div className="flex flex-col min-h-session bg-white">
      <main className="flex-1 container mx-auto px-4 py-6 max-w-7xl">
        {/* Header */}
        <header className="mb-8">
          <h1 className="text-3xl font-medium text-gray-900 mb-2">
            Qu·∫£n l√Ω h·ªçc b·ªïng
          </h1>
          <p className="text-gray-600">
            Qu·∫£n l√Ω c√°c ch∆∞∆°ng tr√¨nh h·ªçc b·ªïng v√† h·ªó tr·ª£ t√†i ch√≠nh cho sinh vi√™n
          </p>
        </header>

        {/* üü© Statistics */}
        <div className="grid md:grid-cols-4 gap-4 mb-6">
          <Card>
            <CardContent className="p-4 flex items-center space-x-3">
              <div className="p-2 bg-[#0388B4] rounded-lg">
                <Award className="h-5 w-5 text-white" />
              </div>
              <div>
                <p className="text-sm text-gray-600">T·ªïng h·ªçc b·ªïng</p>
                <p className="font-medium">{scholarships.length}</p>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="p-4 flex items-center space-x-3">
              <div className="p-2 bg-green-500 rounded-lg">
                <DollarSign className="h-5 w-5 text-white" />
              </div>
              <div>
                <p className="text-sm text-gray-600">T·ªïng gi√° tr·ªã</p>
                <p className="font-medium">
                  {totalScholarshipAmount.toLocaleString("vi-VN")} ‚Ç´
                </p>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="p-4 flex items-center space-x-3">
              <div className="p-2 bg-blue-500 rounded-lg">
                <Users className="h-5 w-5 text-white" />
              </div>
              <div>
                <p className="text-sm text-gray-600">ƒê∆°n ƒëƒÉng k√Ω</p>
                <p className="font-medium">{applications.length}</p>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="p-4 flex items-center space-x-3">
              <div className="p-2 bg-yellow-500 rounded-lg">
                <Clock className="h-5 w-5 text-white" />
              </div>
              <div>
                <p className="text-sm text-gray-600">Ch·ªù duy·ªát</p>
                <p className="font-medium text-yellow-600">
                  {pendingApplications}
                </p>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* üü¶ Tabs */}
        <Tabs defaultValue="scholarships" className="space-y-6">
          <TabsList className="grid w-full md:w-auto md:grid-cols-4">
            <TabsTrigger value="scholarships">H·ªçc b·ªïng</TabsTrigger>
            <TabsTrigger value="applications">ƒê∆°n ƒëƒÉng k√Ω</TabsTrigger>
            <TabsTrigger value="recipients">Ng∆∞·ªùi nh·∫≠n</TabsTrigger>
            <TabsTrigger value="settings">C√†i ƒë·∫∑t</TabsTrigger>
          </TabsList>

          {/* üìò H·ªçc b·ªïng */}
          <TabsContent value="scholarships">
            <Card className="mb-6">
              <CardHeader>
                <div className="flex justify-between items-center">
                  <CardTitle className="flex items-center space-x-2">
                    <Search className="h-5 w-5 text-[#0388B4]" />
                    <span>Danh s√°ch h·ªçc b·ªïng</span>
                  </CardTitle>
                  <Button className="bg-[#0388B4] hover:bg-[#2851b4] text-white">
                    <Plus className="h-4 w-4 mr-1" /> Th√™m m·ªõi
                  </Button>
                </div>
              </CardHeader>
              <CardContent>
                <div className="grid md:grid-cols-4 gap-4">
                  <div className="md:col-span-2">
                    <Label>T√¨m ki·∫øm</Label>
                    <Input
                      placeholder="T√™n h·ªçc b·ªïng..."
                      value={searchTerm}
                      onChange={(e) => setSearchTerm(e.target.value)}
                    />
                  </div>
                  <div>
                    <Label>Lo·∫°i h·ªçc b·ªïng</Label>
                    <Select
                      value={selectedType}
                      onValueChange={setSelectedType}
                    >
                      <SelectTrigger>
                        <SelectValue placeholder="T·∫•t c·∫£" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="all">T·∫•t c·∫£</SelectItem>
                        <SelectItem value="academic">H·ªçc t·∫≠p</SelectItem>
                        <SelectItem value="financial">T√†i ch√≠nh</SelectItem>
                        <SelectItem value="research">Nghi√™n c·ª©u</SelectItem>
                        <SelectItem value="sports">Th·ªÉ thao</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  <div>
                    <Label>Tr·∫°ng th√°i</Label>
                    <Select
                      value={selectedStatus}
                      onValueChange={setSelectedStatus}
                    >
                      <SelectTrigger>
                        <SelectValue placeholder="T·∫•t c·∫£" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="all">T·∫•t c·∫£</SelectItem>
                        <SelectItem value="active">ƒêang m·ªü</SelectItem>
                        <SelectItem value="inactive">ƒê√£ ƒë√≥ng</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>
              </CardContent>
            </Card>

            <div className="grid lg:grid-cols-2 gap-4">
              {filteredScholarships.map((s) => (
                <Card key={s.id} className="hover:shadow-lg transition-shadow">
                  <CardContent className="p-6">
                    <div className="flex justify-between mb-4">
                      <div>
                        <h3 className="font-medium text-lg">{s.name}</h3>
                        <div className="flex space-x-2 mt-1">
                          <Badge className={getTypeColor(s.type)}>
                            {getTypeLabel(s.type)}
                          </Badge>
                          <Badge className={getStatusColor(s.status)}>
                            {getStatusLabel(s.status)}
                          </Badge>
                        </div>
                      </div>
                      <div className="text-right">
                        <p className="font-medium text-[#0388B4] text-lg">
                          {s.amount.toLocaleString("vi-VN")} ‚Ç´
                        </p>
                        <p className="text-sm text-gray-500">{s.duration}</p>
                      </div>
                    </div>
                    <p className="text-gray-700 mb-3">{s.description}</p>
                    <div className="flex space-x-2">
                      <Button
                        size="sm"
                        variant="outline"
                        className="text-[#0388B4] border-[#0388B4]"
                      >
                        <Edit className="h-4 w-4 mr-1" /> Ch·ªânh s·ª≠a
                      </Button>
                      <Button
                        size="sm"
                        variant="outline"
                        className="text-red-600 border-red-600"
                      >
                        <Trash2 className="h-4 w-4 mr-1" /> X√≥a
                      </Button>
                      <Button size="sm" className="bg-[#0388B4] text-white">
                        Chi ti·∫øt
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          {/* üìó ƒê∆°n ƒëƒÉng k√Ω */}
          <TabsContent value="applications">
            <Card>
              <CardHeader>
                <CardTitle className="flex justify-between">
                  <span>ƒê∆°n ƒëƒÉng k√Ω h·ªçc b·ªïng</span>
                  <Badge className="bg-[#0388B4]">
                    {pendingApplications} ch·ªù duy·ªát
                  </Badge>
                </CardTitle>
              </CardHeader>
              <CardContent>
                {applications.map((a) => (
                  <div key={a.id} className="border p-4 rounded-lg mb-4">
                    <div className="flex justify-between mb-2">
                      <div>
                        <h3 className="font-medium">{a.studentName}</h3>
                        <p className="text-sm text-gray-600">
                          {a.studentEmail}
                        </p>
                        <p className="text-sm text-gray-500">
                          H·ªçc b·ªïng: {a.scholarshipName}
                        </p>
                      </div>
                      <div className="text-right">
                        <Badge className={getStatusColor(a.status)}>
                          {getStatusLabel(a.status)}
                        </Badge>
                        <p className="text-sm text-gray-500 mt-1">
                          {a.appliedDate}
                        </p>
                      </div>
                    </div>

                    <p className="text-sm text-gray-700 mb-2">{a.notes}</p>
                    <div className="flex space-x-2">
                      {a.status === "pending" && (
                        <>
                          <Button size="sm" className="bg-green-600 text-white">
                            <CheckCircle className="h-4 w-4 mr-1" /> Duy·ªát
                          </Button>
                          <Button
                            size="sm"
                            variant="outline"
                            className="text-red-600 border-red-600"
                          >
                            <AlertCircle className="h-4 w-4 mr-1" /> T·ª´ ch·ªëi
                          </Button>
                        </>
                      )}
                      <Button
                        size="sm"
                        variant="outline"
                        className="text-[#0388B4] border-[#0388B4]"
                      >
                        Xem chi ti·∫øt
                      </Button>
                    </div>
                  </div>
                ))}
              </CardContent>
            </Card>
          </TabsContent>

          {/* üìô Ng∆∞·ªùi nh·∫≠n */}
          <TabsContent value="recipients">
            <Card>
              <CardHeader>
                <CardTitle>Danh s√°ch ng∆∞·ªùi nh·∫≠n</CardTitle>
              </CardHeader>
              <CardContent>
                {recipients.map((r) => (
                  <div key={r.id} className="border p-4 rounded-lg mb-3">
                    <div className="flex justify-between mb-2">
                      <div>
                        <h3 className="font-medium">{r.studentName}</h3>
                        <p className="text-sm text-gray-600">
                          {r.scholarshipName}
                        </p>
                        <p className="text-sm text-gray-500">
                          H·ªçc k·ª≥: {r.semester}
                        </p>
                      </div>
                      <div className="text-right">
                        <p className="font-medium text-[#0388B4]">
                          {r.amount.toLocaleString("vi-VN")} ‚Ç´
                        </p>
                        <p className="text-sm text-gray-500">
                          C·∫•p ng√†y: {r.awardedDate}
                        </p>
                      </div>
                    </div>
                    <div className="flex space-x-2">
                      <Button
                        size="sm"
                        variant="outline"
                        className="text-[#0388B4] border-[#0388B4]"
                      >
                        Xem l·ªãch s·ª≠
                      </Button>
                      <Button size="sm" variant="outline">
                        Gia h·∫°n
                      </Button>
                      <Button
                        size="sm"
                        variant="outline"
                        className="text-red-600 border-red-600"
                      >
                        Thu h·ªìi
                      </Button>
                    </div>
                  </div>
                ))}
              </CardContent>
            </Card>
          </TabsContent>

          {/* ‚öôÔ∏è C√†i ƒë·∫∑t (th√™m l·∫°i t·ª´ b·∫£n ƒë·∫ßy ƒë·ªß) */}
          <TabsContent value="settings">
            <div className="grid md:grid-cols-2 gap-6">
              <Card>
                <CardHeader>
                  <CardTitle>C√†i ƒë·∫∑t h·ªá th·ªëng</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="font-medium">T·ª± ƒë·ªông duy·ªát ƒë∆°n</p>
                        <p className="text-sm text-gray-600">
                          Duy·ªát t·ª± ƒë·ªông v·ªõi ƒëi·ªÅu ki·ªán ƒë·∫°t y√™u c·∫ßu
                        </p>
                      </div>
                      <Button variant="outline" size="sm">
                        T·∫Øt
                      </Button>
                    </div>
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="font-medium">Email th√¥ng b√°o</p>
                        <p className="text-sm text-gray-600">
                          G·ª≠i email khi c√≥ ƒë∆°n m·ªõi
                        </p>
                      </div>
                      <Button variant="outline" size="sm">
                        B·∫≠t
                      </Button>
                    </div>
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="font-medium">H·∫°n n·ªôp ƒë∆°n m·∫∑c ƒë·ªãnh</p>
                        <p className="text-sm text-gray-600">
                          S·ªë ng√†y m·∫∑c ƒë·ªãnh cho h·∫°n n·ªôp ƒë∆°n
                        </p>
                      </div>
                      <Input className="w-20" defaultValue="30" />
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>Th·ªëng k√™ nhanh</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <div className="flex justify-between">
                      <span>H·ªçc b·ªïng ƒëang m·ªü</span>
                      <span className="font-medium text-green-600">
                        {
                          scholarships.filter((s) => s.status === "active")
                            .length
                        }
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span>ƒê∆°n ch·ªù duy·ªát</span>
                      <span className="font-medium text-yellow-600">
                        {pendingApplications}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span>ƒê∆°n ƒë√£ duy·ªát</span>
                      <span className="font-medium text-green-600">
                        {approvedApplications}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span>T·ªïng ng∆∞·ªùi nh·∫≠n</span>
                      <span className="font-medium">{recipients.length}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>T·ª∑ l·ªá duy·ªát</span>
                      <span className="font-medium text-blue-600">
                        {(
                          (approvedApplications / totalApplications) *
                          100
                        ).toFixed(1)}
                        %
                      </span>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </main>

      <Footer />
    </div>
  );
}